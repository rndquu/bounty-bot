name: Pull Request Action
permissions: write-all
on:
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.PAT_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Install jq and yq
        run: |
          sudo apt-get -y install jq
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
      - name: Update Config Params and Create Pull Requests
        run: |
          # set up jq script
          jq_script='                                                                                             
          if has($old_param) then
            .[$new_param] = .[$old_param] | del(.[$old_param])
          else
            .
          end
          '

          urls=$(curl -sSL https://raw.githubusercontent.com/ubiquity/devpool-directory/development/projects.json | jq -r '.urls[]')
          #urls="https://github.com/EtherealGlow/ubiquibot-pr-qa"

          for url in $urls
          do
            repoName=$(basename $url)
            ownerName=$(echo $url | awk -F/ '{print $(NF-1)}')

            git clone $url $repoName
            cd $repoName

            defaultBranch=$(git branch --show-current)

            # make a branch to update config #
            git branch update
            git checkout update

            ### update configs ###
            # The configurations update code goes here

            declare -A param_mapping=(
              ["evm-network-id"]="network-id chain-id"
              ["price-multiplier"]="base-multiplier"
              #add more configs as needed
            )

            # Iterate over the mapping and perform updates using sed
            for new_param in "${!param_mapping[@]}"
            do
              old_params="${param_mapping[$new_param]}"
              for old_param in $old_params
              do
                jq --arg old_param "$old_param" --arg new_param "$new_param" "$jq_script" ubiquibot-config-default.json > ubiquibot-config-default
                mv ubiquibot-config-default ubiquibot-config-default.json
              done
            done

            git add .
            git commit -m "build: use latest ubiquibot config setup"
            git remote set-url origin https://${{ secrets.PAT_TOKEN }}@github.com/$ownerName/$repoName.git
            git push -f origin update
            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
             https://api.github.com/repos/$ownerName/$repoName/pulls \
            -d '{
             "title": "build: use latest ubiquibot config setup",
             "base": "'"$defaultBranch"'",
             "head": "update"
             }'


            cd ..
          done